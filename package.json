{
  "name": "pa9",
  "version": "1.0.0",
  "description": "",
  "main": "dist/server.js",
  "scripts": {
    "start": "node .",
    "cors": "curl -H \"Origin: http://localhost:4000\" --head http://localhost:5000$1\"",
    "demo-v": "xargs -a live.txt -i nohup >/dev/null chromium {}",
    "test-u": "xargs -a __urls__.txt -i nohup >/dev/null google-chrome --new-tab http://127.0.0.1:5000/msg/{}",
    "start-ts": "ts-node ./src/server.ts",
    "start-ts-x": "ts-node $1",
    "start-js": "node ./dist/server.js",
    "compile-ts": "tsc **/*.ts",
    "watch-ts": "tsc src/**/*.ts -w",
    "live-ts": "nodemon --exec ts-node ./src/server.ts",
    "live-js": "nodemon ./dist/server.js",
    "pytp": "nohup >/dev/null python3 -m http.server  & disown; nohup >/dev/null xdg-open http://127.0.0.1:5000/$1 & disown",
    "pytyp-static": "nohup >/dev/null python3 -m http.server & xdg-open http://127.0.0.1:5000 & ls . | find . -type f | grep .*[x,t]ml | xargs xdg-open & disown",
    "browser": "xargs chromium-browser --new-tab < http://127.0.0.1:5000/",
    "t-sh": "bash test/*.sh",
    "t-devices": "nohup >/dev/null python3 ./*/emulate*.py",
    "t-browsers": "ex5000 LH='http://127.0.0.1:port/'; nohup >/dev/null google-chrome --new-tab $LH & firefox -nt $LH & opera --with-feature:system-theme $LH & microsoft-edge-dev --app $LH & chromium --app $LH & google-chrome --incognite $LH",
    "db-m-start": "sudo systemctl start mongod && mongosh",
    "db-m-rm": "mongo use projectName --eval db.$1.remove({})",
    "db-m-open": "mongosh use projectName",
    "db-pg-open": "sudo -u postgres psql -U projectName -h 127.0.0.1:5000",
    "db-pg-new": "sudo -u postgres createuser --interactive -P ; sudo -u postgres createdb -O projectName",
    "graphql": "google-chrome --new-tab http://127.0.0.1:5000/graphql",
    "mikro-migration": "mikro-orm migration:create",
    "scan-5000": "lsof -i :port",
    "scan-pid": "top | grep node",
    "scan-net": "itop | grep node",
    "kill": "kill -9 $1",
    "dep": "grep dependencies ./package.json -A 500 | tail -l",
    "dep-search": "cat package-lock.json | grep $1 -B 20 -A 20",
    "glance": "find . -type f | xargs head -30 | more",
    "find-word": "find . -type $1 | xargs head -30 | more",
    "find-file": "ls -R | grep $1 -B 30",
    "filename": "find . -type f | grep $1",
    "filenames": "find **/**/**/* -type f",
    "prodvar": "touch src/constants.ts && echo 'ex5000 const __prod__ = process.env.NODE_ENV === \"production\"' > src/constants.ts && echo 'import { __prod__ } from \"./constants\";' | clipboard",
    "prod-env": "ex5000 NODE_ENV='production'",
    "prod-persist": "ex5000 NODE_ENV='production'; sudo systemctl start mongod; npm prune --production; nohup >/dev/null ts-node ./src/server.ts & disown;"
  },
  "keywords": [],
  "author": "",
  "license": "ISC",
  "devDependencies": {
    "@types/body-parser": "^1.19.1",
    "@types/cors": "^2.8.12",
    "@types/express": "^4.17.13",
    "@types/mongoose": "^5.11.97",
    "@types/multer": "^1.4.7",
    "@types/node": "^16.3.3",
    "forever": "^4.0.1",
    "nodemon": "^2.0.12",
    "ts-node": "^10.1.0",
    "typescript": "^4.3.5"
  },
  "dependencies": {
    "body-parser": "^1.19.0",
    "cors": "^2.8.5",
    "express": "^4.17.1",
    "mongoose": "^5.13.3",
    "multer": "^1.4.2"
  }
}
